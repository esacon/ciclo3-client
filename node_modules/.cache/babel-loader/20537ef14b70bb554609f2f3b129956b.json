{"ast":null,"code":"\"use strict\"; // Copyright 2018 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nvar _regeneratorRuntime = require(\"C:/Users/Enrique Niebles/Documents/Misi\\xF3n TIC 2021/Ciclo 3 - Desarrollo Software/Heroku/client/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"C:/Users/Enrique Niebles/Documents/Misi\\xF3n TIC 2021/Ciclo 3 - Desarrollo Software/Heroku/client/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getEnv = exports.clear = exports.GCPEnv = void 0;\n\nvar gcpMetadata = require(\"gcp-metadata\");\n\nvar GCPEnv;\n\n(function (GCPEnv) {\n  GCPEnv[\"APP_ENGINE\"] = \"APP_ENGINE\";\n  GCPEnv[\"KUBERNETES_ENGINE\"] = \"KUBERNETES_ENGINE\";\n  GCPEnv[\"CLOUD_FUNCTIONS\"] = \"CLOUD_FUNCTIONS\";\n  GCPEnv[\"COMPUTE_ENGINE\"] = \"COMPUTE_ENGINE\";\n  GCPEnv[\"CLOUD_RUN\"] = \"CLOUD_RUN\";\n  GCPEnv[\"NONE\"] = \"NONE\";\n})(GCPEnv = exports.GCPEnv || (exports.GCPEnv = {}));\n\nvar envPromise;\n\nfunction clear() {\n  envPromise = undefined;\n}\n\nexports.clear = clear;\n\nfunction getEnv() {\n  return _getEnv.apply(this, arguments);\n}\n\nfunction _getEnv() {\n  _getEnv = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!envPromise) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\", envPromise);\n\n          case 2:\n            envPromise = getEnvMemoized();\n            return _context.abrupt(\"return\", envPromise);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getEnv.apply(this, arguments);\n}\n\nexports.getEnv = getEnv;\n\nfunction getEnvMemoized() {\n  return _getEnvMemoized.apply(this, arguments);\n}\n\nfunction _getEnvMemoized() {\n  _getEnvMemoized = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var env;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            env = GCPEnv.NONE;\n\n            if (!isAppEngine()) {\n              _context2.next = 5;\n              break;\n            }\n\n            env = GCPEnv.APP_ENGINE;\n            _context2.next = 22;\n            break;\n\n          case 5:\n            if (!isCloudFunction()) {\n              _context2.next = 9;\n              break;\n            }\n\n            env = GCPEnv.CLOUD_FUNCTIONS;\n            _context2.next = 22;\n            break;\n\n          case 9:\n            _context2.next = 11;\n            return isComputeEngine();\n\n          case 11:\n            if (!_context2.sent) {\n              _context2.next = 21;\n              break;\n            }\n\n            _context2.next = 14;\n            return isKubernetesEngine();\n\n          case 14:\n            if (!_context2.sent) {\n              _context2.next = 18;\n              break;\n            }\n\n            env = GCPEnv.KUBERNETES_ENGINE;\n            _context2.next = 19;\n            break;\n\n          case 18:\n            if (isCloudRun()) {\n              env = GCPEnv.CLOUD_RUN;\n            } else {\n              env = GCPEnv.COMPUTE_ENGINE;\n            }\n\n          case 19:\n            _context2.next = 22;\n            break;\n\n          case 21:\n            env = GCPEnv.NONE;\n\n          case 22:\n            return _context2.abrupt(\"return\", env);\n\n          case 23:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _getEnvMemoized.apply(this, arguments);\n}\n\nfunction isAppEngine() {\n  return !!(process.env.GAE_SERVICE || process.env.GAE_MODULE_NAME);\n}\n\nfunction isCloudFunction() {\n  return !!(process.env.FUNCTION_NAME || process.env.FUNCTION_TARGET);\n}\n/**\r\n * This check only verifies that the environment is running knative.\r\n * This must be run *after* checking for Kubernetes, otherwise it will\r\n * return a false positive.\r\n */\n\n\nfunction isCloudRun() {\n  return !!process.env.K_CONFIGURATION;\n}\n\nfunction isKubernetesEngine() {\n  return _isKubernetesEngine.apply(this, arguments);\n}\n\nfunction _isKubernetesEngine() {\n  _isKubernetesEngine = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return gcpMetadata.instance('attributes/cluster-name');\n\n          case 3:\n            return _context3.abrupt(\"return\", true);\n\n          case 6:\n            _context3.prev = 6;\n            _context3.t0 = _context3[\"catch\"](0);\n            return _context3.abrupt(\"return\", false);\n\n          case 9:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[0, 6]]);\n  }));\n  return _isKubernetesEngine.apply(this, arguments);\n}\n\nfunction isComputeEngine() {\n  return _isComputeEngine.apply(this, arguments);\n}\n\nfunction _isComputeEngine() {\n  _isComputeEngine = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            return _context4.abrupt(\"return\", gcpMetadata.isAvailable());\n\n          case 1:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _isComputeEngine.apply(this, arguments);\n}","map":{"version":3,"sources":["C:/Users/Enrique Niebles/Documents/Misi√≥n TIC 2021/Ciclo 3 - Desarrollo Software/Heroku/client/react/node_modules/google-auth-library/build/src/auth/envDetect.js"],"names":["Object","defineProperty","exports","value","getEnv","clear","GCPEnv","gcpMetadata","require","envPromise","undefined","getEnvMemoized","env","NONE","isAppEngine","APP_ENGINE","isCloudFunction","CLOUD_FUNCTIONS","isComputeEngine","isKubernetesEngine","KUBERNETES_ENGINE","isCloudRun","CLOUD_RUN","COMPUTE_ENGINE","process","GAE_SERVICE","GAE_MODULE_NAME","FUNCTION_NAME","FUNCTION_TARGET","K_CONFIGURATION","instance","isAvailable"],"mappings":"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","sourcesContent":["\"use strict\";\r\n// Copyright 2018 Google LLC\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//      http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.getEnv = exports.clear = exports.GCPEnv = void 0;\r\nconst gcpMetadata = require(\"gcp-metadata\");\r\nvar GCPEnv;\r\n(function (GCPEnv) {\r\n    GCPEnv[\"APP_ENGINE\"] = \"APP_ENGINE\";\r\n    GCPEnv[\"KUBERNETES_ENGINE\"] = \"KUBERNETES_ENGINE\";\r\n    GCPEnv[\"CLOUD_FUNCTIONS\"] = \"CLOUD_FUNCTIONS\";\r\n    GCPEnv[\"COMPUTE_ENGINE\"] = \"COMPUTE_ENGINE\";\r\n    GCPEnv[\"CLOUD_RUN\"] = \"CLOUD_RUN\";\r\n    GCPEnv[\"NONE\"] = \"NONE\";\r\n})(GCPEnv = exports.GCPEnv || (exports.GCPEnv = {}));\r\nlet envPromise;\r\nfunction clear() {\r\n    envPromise = undefined;\r\n}\r\nexports.clear = clear;\r\nasync function getEnv() {\r\n    if (envPromise) {\r\n        return envPromise;\r\n    }\r\n    envPromise = getEnvMemoized();\r\n    return envPromise;\r\n}\r\nexports.getEnv = getEnv;\r\nasync function getEnvMemoized() {\r\n    let env = GCPEnv.NONE;\r\n    if (isAppEngine()) {\r\n        env = GCPEnv.APP_ENGINE;\r\n    }\r\n    else if (isCloudFunction()) {\r\n        env = GCPEnv.CLOUD_FUNCTIONS;\r\n    }\r\n    else if (await isComputeEngine()) {\r\n        if (await isKubernetesEngine()) {\r\n            env = GCPEnv.KUBERNETES_ENGINE;\r\n        }\r\n        else if (isCloudRun()) {\r\n            env = GCPEnv.CLOUD_RUN;\r\n        }\r\n        else {\r\n            env = GCPEnv.COMPUTE_ENGINE;\r\n        }\r\n    }\r\n    else {\r\n        env = GCPEnv.NONE;\r\n    }\r\n    return env;\r\n}\r\nfunction isAppEngine() {\r\n    return !!(process.env.GAE_SERVICE || process.env.GAE_MODULE_NAME);\r\n}\r\nfunction isCloudFunction() {\r\n    return !!(process.env.FUNCTION_NAME || process.env.FUNCTION_TARGET);\r\n}\r\n/**\r\n * This check only verifies that the environment is running knative.\r\n * This must be run *after* checking for Kubernetes, otherwise it will\r\n * return a false positive.\r\n */\r\nfunction isCloudRun() {\r\n    return !!process.env.K_CONFIGURATION;\r\n}\r\nasync function isKubernetesEngine() {\r\n    try {\r\n        await gcpMetadata.instance('attributes/cluster-name');\r\n        return true;\r\n    }\r\n    catch (e) {\r\n        return false;\r\n    }\r\n}\r\nasync function isComputeEngine() {\r\n    return gcpMetadata.isAvailable();\r\n}\r\n//# sourceMappingURL=envDetect.js.map"]},"metadata":{},"sourceType":"script"}